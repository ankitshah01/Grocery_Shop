// Import necessary modules and components
import React, { useState, useEffect } from 'react';
import { View, Text, TextInput, Button, StyleSheet } from 'react-native';
import firebase from 'firebase/app';
import 'firebase/auth';
import 'firebase/firestore';

// Firebase configuration
const firebaseConfig = {
  apiKey: "YOUR_API_KEY",
  authDomain: "YOUR_AUTH_DOMAIN",
  projectId: "YOUR_PROJECT_ID",
  storageBucket: "YOUR_STORAGE_BUCKET",
  messagingSenderId: "YOUR_MESSAGING_SENDER_ID",
  appId: "YOUR_APP_ID"
};

// Initialize Firebase
if (!firebase.apps.length) {
  firebase.initializeApp(firebaseConfig);
}

// Define functional component for inventory management
const InventoryManagementScreen = () => {
  // State variables for managing inventory data
  const [productName, setProductName] = useState('');
  const [quantity, setQuantity] = useState('');
  const [price, setPrice] = useState('');
  const [user, setUser] = useState(null);

  // Function to handle adding a new inventory item
  const handleAddInventory = () => {
    // Validate input fields
    if (!productName || !quantity || !price) {
      alert('Please fill in all fields');
      return;
    }

    // Add item to Firestore database
    firebase.firestore().collection('inventory').add({
      productName,
      quantity: parseInt(quantity),
      price: parseFloat(price),
      timestamp: firebase.firestore.FieldValue.serverTimestamp()
    }).then(() => {
      console.log('Item added to inventory');
      // Clear input fields after adding item
      setProductName('');
      setQuantity('');
      setPrice('');
    }).catch(error => {
      console.error('Error adding item to inventory:', error);
      alert('An error occurred while adding item to inventory');
    });
  };

  // Function to handle user authentication
  const handleSignIn = () => {
    firebase.auth().signInAnonymously()
      .then((userCredential) => {
        // Signed in successfully
        const user = userCredential.user;
        setUser(user);
      })
      .catch((error) => {
        console.error('Error signing in anonymously:', error);
        alert('An error occurred while signing in');
      });
  };

  useEffect(() => {
    // Check if user is already signed in
    firebase.auth().onAuthStateChanged((user) => {
      if (user) {
        // User is signed in
        setUser(user);
      } else {
        // No user is signed in, attempt sign-in
        handleSignIn();
      }
    });
  }, []);

  return (
    <View style={styles.container}>
      {user ? (
        <View>
          <Text style={styles.title}>Add Inventory Item</Text>
          <TextInput
            style={styles.input}
            placeholder="Product Name"
            value={productName}
            onChangeText={setProductName}
          />
          <TextInput
            style={styles.input}
            placeholder="Quantity"
            value={quantity}
            onChangeText={setQuantity}
            keyboardType="numeric"
          />
          <TextInput
            style={styles.input}
            placeholder="Price"
            value={price}
            onChangeText={setPrice}
            keyboardType="numeric"
          />
          <Button
            title="Add to Inventory"
            onPress={handleAddInventory}
          />
        </View>
      ) : (
        <Text>Loading...</Text>
      )}
    </View>
  );
};

// Define stylesheet
const styles = StyleSheet.create({
  container: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
  },
  title: {
    fontSize: 20,
    fontWeight: 'bold',
    marginBottom: 20,
  },
  input: {
    width: '80%',
    height: 40,
    borderColor: 'gray',
    borderWidth: 1,
    borderRadius: 5,
    marginBottom: 10,
    paddingHorizontal: 10,
  },
});

// Export the component for use in the application
export default InventoryManagementScreen;
